{"version":3,"sources":["api/users.ts","api/todos.ts","api/time.ts","components/PageNavbar/PageNavbar.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","getUsers","map","user","userId","fullName","todos","title","completed","getTodos","untypedTodo","untypedUser","todoId","PageDate","Date","MONTHS","DAYS","getWeekDayOf","today","getDay","getTodayMessage","getMonth","getDate","getFullYear","PageNavbar","memo","useMemo","Navbar","className","bg","variant","Container","Brand","href","Form","FormControl","type","placeholder","Button","UserInfo","TodoInfo","todo","FormCheckLabel","Check","String","defaultChecked","TodoList","TodoForm","onSubmit","defaultOption","lastTakenId","useState","setTitle","setUsername","availableId","setAvailableId","isTitleErrorShown","setTitleErrorShown","isOptionErrorShown","setOptionErrorShown","handleInputChange","useCallback","value","handleSelectorChange","target","clearForm","handleFormSubmission","event","preventDefault","find","trim","prevId","action","method","htmlFor","autoComplete","onChange","App","setTodos","newTodo","prevTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.277f2df7.chunk.js","sourcesContent":["import { User } from '../types/User';\n\nexport const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport const getUsers = (): User[] => {\n  return users.map(user => ({\n    userId: user.id,\n    fullName: user.name,\n    username: user.username,\n    email: user.email,\n  }));\n};\n","import { Todo } from '../types/Todo';\nimport { users } from './users';\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'facilis inventore laboriosam omnis quo veniam',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'lorem ipsum dolor sit amet, consectetur adipis',\n    completed: false,\n  },\n];\n\nexport const getTodos = (): Todo[] => {\n  return [...todos].map(untypedTodo => {\n    const untypedUser = users[untypedTodo.userId - 1] || null;\n\n    return {\n      user: {\n        userId: untypedUser.id,\n        fullName: untypedUser.name,\n        username: untypedUser.username,\n        email: untypedUser.email,\n      },\n      userId: untypedTodo.userId,\n      todoId: untypedTodo.id,\n      title: untypedTodo.title,\n      completed: untypedTodo.completed,\n    };\n  });\n};\n","export class PageDate extends Date {\n  public static readonly MONTHS: string[] = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  public static readonly DAYS: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n\n  static getWeekDayOf = (today: PageDate) => PageDate.DAYS[today.getDay()];\n\n  static getTodayMessage = () => {\n    const today = new Date();\n\n    return `${(PageDate.MONTHS)[today.getMonth()]} `\n      + `${today.getDate()}, `\n      + `${today.getFullYear()}`;\n  };\n}\n","import '../../styles/components/PageNavbar.scss';\nimport {\n  Button,\n  Navbar,\n  Container,\n  Form,\n  FormControl,\n} from 'react-bootstrap';\nimport { FC, memo, useMemo } from 'react';\nimport { PageDate } from '../../api/time';\n\nexport const PageNavbar: FC = memo(\n  () => {\n    const today = useMemo(() => new PageDate(), []);\n\n    return (\n      <Navbar className=\"PageNavbar\" bg=\"danger\" variant=\"dark\">\n        <Container className=\"d-flex justify-content-between\">\n          <Navbar.Brand\n            href=\"#\"\n            className=\"PageNavbar__title d-flex align-items-center\"\n          >\n            {'TodoList | '}\n\n            <div className=\"\n              PageNavbar__date\n              d-inline-flex\n              flex-column\n              ms-2\n              \"\n            >\n              {PageDate.getTodayMessage()}\n\n              <div className=\"PageNavbar__date-weekday\">\n                {PageDate.getWeekDayOf(today)}\n              </div>\n            </div>\n          </Navbar.Brand>\n\n          <Form className=\"d-flex\">\n            <FormControl\n              type=\"search\"\n              placeholder=\"Enter your todo...\"\n              className=\"PageNavbar__search me-2\"\n              aria-label=\"Search\"\n            />\n\n            <Button className=\"PageNavbar__button me-2\">\n              Search\n            </Button>\n          </Form>\n        </Container>\n      </Navbar>\n    );\n  },\n);\n","import '../../styles/components/UserInfo.scss';\nimport { FC, memo } from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: Omit<User, 'userId'>;\n}\n\nexport const UserInfo: FC<Props> = memo(\n  ({ user }) => {\n    const { username, fullName, email } = user;\n\n    return (\n      <div className=\"\n        UserInfo\n        d-flex\n        flex-column\n        align-items-center\n        \"\n      >\n        <p\n          className=\"UserInfo__name\"\n          title={`Username - ${username}`}\n        >\n          {fullName}\n        </p>\n\n        <a\n          className=\"UserInfo__email\"\n          href={`mailto: ${email}`}\n        >\n          {email}\n        </a>\n      </div>\n    );\n  },\n);\n","import '../../styles/components/TodoInfo.scss';\nimport { FC, memo } from 'react';\nimport { Form } from 'react-bootstrap';\nimport FormCheckLabel from 'react-bootstrap/FormCheckLabel';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Omit<Todo, 'userId'>;\n}\n\nexport const TodoInfo: FC<Props> = memo(\n  ({ todo }) => {\n    const {\n      user, todoId, title, completed,\n    } = todo;\n\n    return (\n      <div className=\"\n        TodoInfo\n        d-flex\n        justify-content-between\n        align-items-center\n        \"\n      >\n        <div\n          className=\"TodoInfo__title d-flex align-items-center\"\n        >\n          <FormCheckLabel\n            className=\"TodoInfo__title-text d-flex align-items-center\"\n          >\n            <Form className=\"me-3\">\n              <Form.Check\n                className=\"TodoInfo__check\"\n                id={String(todoId)}\n                defaultChecked={completed}\n              />\n            </Form>\n\n            {title}\n          </FormCheckLabel>\n        </div>\n\n        {user && <UserInfo user={user} />}\n      </div>\n    );\n  },\n);\n","import '../../styles/components/TodoList.scss';\nimport { FC, memo } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: FC<Props> = memo(\n  ({ todos }) => (\n    <ul className=\"Todolist d-flex flex-column\">\n      {todos.map(todo => (\n        <li className=\"Todolist__item\" key={todo.todoId}>\n          <TodoInfo todo={todo} />\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import {\n  FC, memo, useCallback, useMemo, useState,\n} from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Todo } from '../../types/Todo';\nimport { getUsers } from '../../api/users';\n\ninterface Props {\n  defaultOption: string;\n  lastTakenId: number;\n  onSubmit: (todo: Todo) => void;\n}\n\nexport const TodoForm: FC<Props> = memo(\n  ({ onSubmit, defaultOption, lastTakenId }) => {\n    const users = useMemo(getUsers, []);\n\n    const [title, setTitle] = useState('');\n    const [username, setUsername] = useState('');\n    const [availableId, setAvailableId] = useState(lastTakenId + 1);\n\n    const [isTitleErrorShown, setTitleErrorShown] = useState(false);\n    const [isOptionErrorShown, setOptionErrorShown] = useState(false);\n\n    const handleInputChange = useCallback((value) => {\n      setTitleErrorShown(false);\n      setTitle(value);\n    }, []);\n\n    const handleSelectorChange = useCallback(({ target }) => {\n      setOptionErrorShown(false);\n      setUsername(target.value);\n    }, []);\n\n    const clearForm = useCallback(() => {\n      handleInputChange('');\n    }, []);\n\n    const handleFormSubmission = useCallback((event) => {\n      event.preventDefault();\n\n      if (!title || !username) {\n        setTitleErrorShown(!title);\n        setOptionErrorShown(!username);\n\n        return;\n      }\n\n      const user = users.find(\n        ({ fullName }) => fullName === username,\n      ) || null;\n\n      onSubmit({\n        user: user || null,\n        userId: user?.userId || null,\n        todoId: availableId,\n        completed: false,\n        title: title.trim(),\n      });\n\n      setAvailableId(prevId => prevId + 1);\n      setUsername('');\n\n      clearForm();\n    }, [title, username]);\n\n    return (\n      <div className=\"TodoForm\">\n        <div className=\"TodoForm__content\">\n          <form\n            className=\"TodoForm__form\"\n            action=\"#\"\n            method=\"post\"\n            onSubmit={handleFormSubmission}\n          >\n            <div className=\"TodoForm__container\">\n              <label\n                className=\"TodoForm__title\"\n                htmlFor=\"input\"\n              >\n                <span className=\"TodoForm__title-label\">\n                  Title\n                </span>\n\n                <input\n                  id=\"input\"\n                  className=\"TodoForm__title-input\"\n                  value={title}\n                  placeholder=\"Enter todo title...\"\n                  autoComplete=\"off\"\n                  onChange={({ target }) => {\n                    handleInputChange(target.value);\n                  }}\n                />\n              </label>\n\n              {isTitleErrorShown && (\n                <p className=\"TodoForm__container-error\">\n                  Enter a valid title!\n                </p>\n              )}\n            </div>\n\n            <div className=\"TodoForm__container\">\n              <div className=\"TodoForm__options\">\n                <span className=\"TodoForm__options-label\">\n                  Name\n                </span>\n\n                <select\n                  className=\"TodoForm__options-selector\"\n                  value={username}\n                  onChange={handleSelectorChange}\n                >\n                  {!username && (\n                    <option\n                      value={defaultOption}\n                    >\n                      {defaultOption}\n                    </option>\n                  )}\n\n                  {users\n                    .map(user => user.fullName)\n                    .map(name => (\n                      <option key={`user-${name}`} value={name}>\n                        {name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n\n              {isOptionErrorShown && (\n                <p className=\"TodoForm__container-error\">\n                  Choose an option!\n                </p>\n              )}\n            </div>\n\n            <Button\n              className=\"TodoForm__submitButton\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  },\n);\n","import './App.scss';\nimport {\n  FC, memo, useCallback, useState,\n} from 'react';\nimport { getTodos } from './api/todos';\nimport { Todo } from './types/Todo';\nimport { PageNavbar } from './components/PageNavbar';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\n\nexport const App: FC = memo(\n  () => {\n    const [todos, setTodos] = useState(getTodos);\n\n    const handleFormSubmission = useCallback((newTodo: Todo) => {\n      setTodos((prevTodos) => (\n        [...prevTodos, newTodo]\n      ));\n    }, []);\n\n    return (\n      <div className=\"App\">\n        <PageNavbar />\n\n        <div\n          className=\"App__content d-flex justify-content-between\"\n        >\n          <div className=\"App__form\">\n            <TodoForm\n              defaultOption=\"Choose a users...\"\n              lastTakenId={todos[todos.length - 1].todoId}\n              onSubmit={handleFormSubmission}\n            />\n          </div>\n\n          <TodoList todos={todos} />\n        </div>\n      </div>\n    );\n  },\n);\n","import ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}